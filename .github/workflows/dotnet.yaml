name: Deploy to Amazon ECS with Windows

on:
  push:
    branches:
      - main  # Set your branch name here
env:
  AWS_REGION: eu-north-1

jobs:
  build-and-deploy:
    runs-on: windows-latest  # Using a Windows runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push Docker image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: 973905176396.dkr.ecr.us-west-2.amazonaws.com
      #     ECR_REPOSITORY: github-build
      #     IMAGE_TAG: latest
      #   run: |
      #     # Build the Docker image
      #     docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} -f Dockerfile .
      #     # Push the image to Amazon ECR
      #     docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}


      - name: Build & Upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
         access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
         secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         registry: 973905176396.dkr.ecr.us-west-2.amazonaws.com
         repo: github-build
         region: ${{ env.AWS_REGION }}
         tags: latest,${{ github.run_number }}
         daemon_off: false
         dockerfile: ./Dockerfile
         context: ./
          
    

      # - name: Fill in the new image ID in the ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     input: task-definition.json
      #     image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Deploy image to Amazon ECS
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     service: my-ecs-service
      #     cluster: my-ecs-cluster
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
